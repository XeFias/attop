import "stdfunctions.etl";

//Wasn't chaching this kind of operations important for performances? I didn't measure much, but it seems to have no effect..
@cached
operation getAllAttributes() : Sequence {
	return UATV!Attribute.allInstances();
}

operation Uppaal!NTA initializeTemplate( states : Set(IMA!State)) : Map(String, Any) {
	
	self.clock  = new Uppaal!PredefinedType();
	self.clock.name = "clock";
	self.clock.type = Uppaal!BuiltInType#CLOCK;

	self.systemDeclarations = new Uppaal!SystemDeclarations();
	self.systemDeclarations.system = new Uppaal!System();
	var iList = new Uppaal!InstantiationList();
	self.systemDeclarations.system.instantiationList.add(iList);
	
	
	var stateMap : Map(IMA!State,Uppaal!Location) = Map{};

	var tmpl : Uppaal!Template = new Uppaal!Template();
	tmpl.name = "Monolith";
	tmpl.declarations = new Uppaal!LocalDeclarations();

	// The clock
	var timeVar:Uppaal!Variable = tmpl.declareClock("x");
	var timeVarTotal:Uppaal!Variable = tmpl.declareClock("x_top");

	for (state : IMA!State in states) {
		var skip = false;
		var isInit = false;
		var commit = true;
		var	color = Uppaal!ColorKind#DEFAULT;
		var loc;
		var label = "";
		switch( state.name ) {
			case "rootState" : {
				label = "Init";
				isInit = true;
			}
			case "SUCCESS" : {
				label = "Completed";
				commit = false;
				color = Uppaal!ColorKind#GREEN;
			}
			case "FAIL" : {
				label = "FAIL";
				commit = false;
				color = Uppaal!ColorKind#RED;
			}
			case "Final" : {
				skip = true;
			}
			default : {
				label = "at_" + state.id.toString();
			}
		}
		if ( not skip ) {
			loc = tmpl.createLocation( label );
			loc.setColor( color );
			if ( isInit ) { tmpl.init = loc; }
			if ( commit ) { loc.makeCommitted(); }
			stateMap.put( state, loc );
		}
	}

	var decl = new Uppaal!TemplateDeclaration();
	decl.declaredTemplate = new Uppaal!RedefinedTemplate();
	decl.declaredTemplate.referredTemplate = tmpl;
	decl.declaredTemplate.name = "toplevel";
	
	self.template.add(tmpl);
	self.systemDeclarations.declaration.add(decl);
	self.systemDeclarations.system.instantiationList.at(0).template.add(decl.declaredTemplate);

	return Map{	"tmpl" = tmpl,
				"stateMap" = stateMap,
				"timeVar" = timeVar }; 
}