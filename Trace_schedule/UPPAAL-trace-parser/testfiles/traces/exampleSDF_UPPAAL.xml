<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>
// This model is generated by UATMM2Uppaal M2T Generation
// Date: Tue Aug 30 14:38:27 CEST 2016 
	
const int nProcessors = 2;	
const int nVFIs = 1;	
int occupied_processor_count[nVFIs];	
int curr_freq[nVFIs] = { 4 };	
const int nActors = 3;	
const int nFrequencies_pt2_id = 2;	
int counter_a = 0;	
int counter_b = 0;	
int counter_c = 0;	
int buff_a2b = 0;	
int buff_b2a = 2;	
int buff_b2c = 0;	
int buff_c2b = 6;	
int buff_b2b = 1;
typedef int[0, nProcessors - 1] id_processors;
typedef int[0, nVFIs - 1] id_VFIs;

clock globalClock;


chan fire[nProcessors][nActors];	
chan end[nProcessors][nActors];	
broadcast chan fjump_pt2_id_2_4[nVFIs];	
broadcast chan fjump_pt2_id_4_2[nVFIs];

void produce(int &amp;buffer_tokens, int tokens) {
    buffer_tokens += tokens;
}

void consume(int &amp;buffer_tokens, int tokens) {
    buffer_tokens -= tokens;
}
	</declaration><template><name>Scheduler</name><declaration>
</declaration><location id="id0" x="0" y="30"><name x="10" y="40">Initial</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id0"/><label kind="select" x="-65" y="-74">f : id_VFIs</label><label kind="guard" x="-65" y="-59">occupied_processor_count[f] == (0) and curr_freq[f] == (2)</label><label kind="synchronisation" x="-65" y="-44">fjump_pt2_id_2_4[f]!</label><label kind="assignment" x="-64" y="-24">curr_freq[f] = 4</label><nail x="-35" y="-59"/><nail x="25" y="-59"/></transition><transition><source ref="id0"/><target ref="id0"/><label kind="select" x="-56" y="129">f : id_VFIs</label><label kind="guard" x="-56" y="144">occupied_processor_count[f] == (0) and curr_freq[f] == (4)</label><label kind="synchronisation" x="-56" y="159">fjump_pt2_id_4_2[f]!</label><label kind="assignment" x="-56" y="176">curr_freq[f] = 2</label><nail x="-26" y="144"/><nail x="34" y="144"/></transition></template><template><name>SDF_Graph</name><parameter>int a_SDF_Graph_template, int b_SDF_Graph_template, int c_SDF_Graph_template</parameter><declaration>
		</declaration><location id="id1" x="0" y="30"><name x="10" y="40">Initial</name></location><init ref="id1"/><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="-264" y="163">e : id_processors</label><label kind="guard" x="-264" y="178">buff_b2a &gt;= (1)</label><label kind="synchronisation" x="-264" y="193">fire[e][a_SDF_Graph_template]!</label><label kind="assignment" x="-264" y="208">consume(buff_b2a, 1)</label><nail x="-255" y="161"/><nail x="-170" y="161"/></transition><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="-94" y="-126">e : id_processors</label><label kind="synchronisation" x="-94" y="-96">end[e][a_SDF_Graph_template]?</label><label kind="assignment" x="-94" y="-81">produce(buff_a2b, 1),
counter_a++</label><nail x="-59" y="-102"/><nail x="0" y="-102"/></transition><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="152" y="86">e : id_processors</label><label kind="guard" x="152" y="101">buff_a2b &gt;= (2) and buff_c2b &gt;= (3) and buff_b2b &gt;= (1)</label><label kind="synchronisation" x="152" y="116">fire[e][b_SDF_Graph_template]!</label><label kind="assignment" x="152" y="131">consume(buff_a2b, 2),
consume(buff_c2b, 3),
consume(buff_b2b, 1)</label><nail x="170" y="85"/><nail x="246" y="85"/></transition><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="161" y="-100">e : id_processors</label><label kind="synchronisation" x="161" y="-70">end[e][b_SDF_Graph_template]?</label><label kind="assignment" x="161" y="-55">produce(buff_b2a, 2),
produce(buff_b2c, 3),
produce(buff_b2b, 1),
counter_b++</label><nail x="191" y="-85"/><nail x="246" y="-85"/></transition><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="-1" y="197">e : id_processors</label><label kind="guard" x="-1" y="212">buff_b2c &gt;= (2)</label><label kind="synchronisation" x="-1" y="227">fire[e][c_SDF_Graph_template]!</label><label kind="assignment" x="-1" y="242">consume(buff_b2c, 2)</label><nail x="17" y="195"/><nail x="93" y="195"/></transition><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="-323" y="-57">e : id_processors</label><label kind="synchronisation" x="-323" y="-27">end[e][c_SDF_Graph_template]?</label><label kind="assignment" x="-323" y="-12">produce(buff_c2b, 2),
counter_c++</label><nail x="-306" y="-34"/><nail x="-229" y="-34"/></transition></template><template><name>pt2_id</name><parameter>int vfi_id, int p_id, int a_PAM_template, int b_PAM_template, int c_PAM_template</parameter><declaration>
clock x;</declaration><location id="id2" x="0" y="-76"><name x="-6" y="-108">Idle_pt2_id_2</name><label kind="invariant" x="19" y="-91">cost' == (1)</label></location><location id="id3" x="-246" y="119"><name x="-229" y="102">Idle_pt2_id_4</name><label kind="invariant" x="-221" y="119">cost' == (3)</label></location><location id="id4" x="280" y="8"><name x="297" y="-17">InUse_A_pt2_id_2</name><label kind="invariant" x="297" y="0">x &lt;= (16) and cost' == (2)</label></location><location id="id5" x="289" y="127"><name x="297" y="102">InUse_B_pt2_id_2</name><label kind="invariant" x="306" y="127">x &lt;= (20) and cost' == (2)</label></location><location id="id6" x="-195" y="-221"><name x="-323" y="-238">InUse_C_pt2_id_2</name><label kind="invariant" x="-357" y="-204">x &lt;= (10) and cost' == (2)</label></location><location id="id7" x="-535" y="0"><name x="-663" y="-25">InUse_A_pt2_id_4</name><label kind="invariant" x="-714" y="8">x &lt;= (8) and cost' == (4)</label></location><location id="id8" x="-714" y="272"><name x="-850" y="255">InUse_B_pt2_id_4</name><label kind="invariant" x="-901" y="280">x &lt;= (10) and cost' == (4)</label></location><location id="id9" x="-34" y="272"><name x="-17" y="255">InUse_C_pt2_id_4</name><label kind="invariant" x="-17" y="280">x &lt;= (5) and cost' == (4)</label></location><init ref="id3"/><transition><source ref="id2"/><target ref="id3"/><label kind="synchronisation" x="-229" y="-59">fjump_pt2_id_2_4[vfi_id]?</label><nail x="-204" y="-25"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-187" y="34">fjump_pt2_id_4_2[vfi_id]?</label><nail x="-102" y="42"/></transition><transition><source ref="id2"/><target ref="id4"/><label kind="synchronisation" x="204" y="-125">fire[p_id][a_PAM_template]?</label><label kind="assignment" x="204" y="-110">x = 0,
occupied_processor_count[vfi_id]++</label><nail x="280" y="-76"/></transition><transition><source ref="id4"/><target ref="id2"/><label kind="guard" x="56" y="-64">x &gt;= 8</label><label kind="synchronisation" x="51" y="-49">end[p_id][a_PAM_template]!</label><label kind="assignment" x="51" y="-34">x = 0,
occupied_processor_count[vfi_id]--</label><nail x="221" y="8"/></transition><transition><source ref="id2"/><target ref="id5"/><label kind="synchronisation" x="221" y="51">fire[p_id][b_PAM_template]?</label><label kind="assignment" x="221" y="64">x = 0,
occupied_processor_count[vfi_id]++</label><nail x="289" y="76"/></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="72" y="104">x &gt;= 10</label><label kind="synchronisation" x="76" y="127">end[p_id][b_PAM_template]!</label><label kind="assignment" x="76" y="136">x = 0,
occupied_processor_count[vfi_id]--</label><nail x="68" y="127"/></transition><transition><source ref="id2"/><target ref="id6"/><label kind="synchronisation" x="-127" y="-255">fire[p_id][c_PAM_template]?</label><label kind="assignment" x="-127" y="-238">x = 0,
occupied_processor_count[vfi_id]++</label><nail x="0" y="-221"/></transition><transition><source ref="id6"/><target ref="id2"/><label kind="guard" x="-248" y="-184">x &gt;= 5</label><label kind="synchronisation" x="-246" y="-170">end[p_id][c_PAM_template]!</label><label kind="assignment" x="-246" y="-153">x = 0,
occupied_processor_count[vfi_id]--</label><nail x="-195" y="-93"/></transition><transition><source ref="id3"/><target ref="id7"/><label kind="synchronisation" x="-510" y="-34">fire[p_id][a_PAM_template]?</label><label kind="assignment" x="-510" y="-17">x = 0,
occupied_processor_count[vfi_id]++</label><nail x="-425" y="0"/></transition><transition><source ref="id7"/><target ref="id3"/><label kind="guard" x="-576" y="48">x &gt;= 4</label><label kind="synchronisation" x="-578" y="59">end[p_id][a_PAM_template]!</label><label kind="assignment" x="-578" y="76">x = 0,
occupied_processor_count[vfi_id]--</label><nail x="-535" y="119"/></transition><transition><source ref="id3"/><target ref="id8"/><label kind="synchronisation" x="-756" y="161">fire[p_id][b_PAM_template]?</label><label kind="assignment" x="-756" y="178">x = 0,
occupied_processor_count[vfi_id]++</label><nail x="-714" y="194"/></transition><transition><source ref="id8"/><target ref="id3"/><label kind="guard" x="-672" y="232">x &gt;= 5</label><label kind="synchronisation" x="-671" y="246">end[p_id][b_PAM_template]!</label><label kind="assignment" x="-671" y="255">x = 0,
occupied_processor_count[vfi_id]--</label><nail x="-459" y="272"/></transition><transition><source ref="id3"/><target ref="id9"/><label kind="synchronisation" x="-187" y="153">fire[p_id][c_PAM_template]?</label><label kind="assignment" x="-187" y="170">x = 0,
occupied_processor_count[vfi_id]++</label><nail x="-34" y="212"/></transition><transition><source ref="id9"/><target ref="id3"/><label kind="guard" x="-288" y="224">x &gt;= 2</label><label kind="synchronisation" x="-289" y="238">end[p_id][c_PAM_template]!</label><label kind="assignment" x="-289" y="255">x = 0,
occupied_processor_count[vfi_id]--</label><nail x="-246" y="272"/></transition></template><system>
// This model is generated by UATMM2Uppaal M2T Generation
// Date: Tue Aug 30 14:38:27 CEST 2016 
const int vfi1_id_declaration = 0;
const int a_declaration = 0;
const int b_declaration = 1;
const int c_declaration = 2;
const int p1_t2_id_declaration = 0;
const int p2_t2_id_declaration = 1;
Redefined_Scheduler = Scheduler();
Redefined_SDF_Graph = SDF_Graph(a_declaration, b_declaration, c_declaration);
Redefined_PAM_p1_t2_id = pt2_id(vfi1_id_declaration, p1_t2_id_declaration, a_declaration, b_declaration, c_declaration);
Redefined_PAM_p2_t2_id = pt2_id(vfi1_id_declaration, p2_t2_id_declaration, a_declaration, b_declaration, c_declaration);

system Redefined_Scheduler, Redefined_SDF_Graph, Redefined_PAM_p1_t2_id, Redefined_PAM_p2_t2_id;
	</system></nta>